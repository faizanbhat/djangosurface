# Generated by Django 3.0.5 on 2020-04-17 07:50

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Similarity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pk1', models.IntegerField(db_index=True)),
                ('pk2', models.IntegerField()),
                ('similarity', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('homepage', models.URLField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('src', models.CharField(max_length=300, unique=True)),
                ('title', models.CharField(db_index=True, max_length=500)),
                ('description', models.CharField(max_length=1000)),
                ('thumb_src', models.CharField(max_length=300)),
                ('site', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='videos.Site')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='Sitemap',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(unique=True)),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.Site')),
            ],
        ),
    ]
